import { notFound } from 'next/navigation'
import { supabase, Activity } from '@/lib/supabase'
import Link from 'next/link'

interface ActivityDetailProps {
  params: {
    id: string
  }
}

async function getActivity(id: string): Promise<Activity | null> {
  const { data, error } = await supabase
    .from('activities')
    .select('*')
    .eq('id', id)
    .single()

  if (error) {
    console.error('Error fetching activity:', error)
    return null
  }

  return data
}

export default async function ActivityDetail({ params }: ActivityDetailProps) {
  const activity = await getActivity(params.id)

  if (!activity) {
    notFound()
  }

  const getDurationText = (minutes: number) => {
    if (minutes <= 20) return '–ë—ã—Å—Ç—Ä–æ'
    if (minutes <= 45) return '–°—Ä–µ–¥–Ω–µ'
    return '–î–æ–ª–≥–æ'
  }

  const getDifficultyEmoji = (difficulty: string) => {
    const emojis = { easy: 'üòä', medium: 'ü§î', hard: 'üò§' }
    return emojis[difficulty as keyof typeof emojis] || 'üòä'
  }

  const getCategoryName = (category: string) => {
    const categories: Record<string, string> = {
      'active_games': '–ê–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞',
      'creativity': '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
      'learn_new': '–£–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ',
      'cooking': '–ö—É–ª–∏–Ω–∞—Ä–∏—è',
      'gifts': '–°–¥–µ–ª–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫',
      'experiments': '–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã',
      'reading_stories': '–ß—Ç–µ–Ω–∏–µ –∏ –∏—Å—Ç–æ—Ä–∏–∏'
    }
    return categories[category] || category
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 p-4">
      <div className="max-w-4xl mx-auto">
        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
        <div className="mb-6">
          <Link 
            href="/activities" 
            className="inline-flex items-center text-blue-600 hover:text-blue-800 transition-colors"
          >
            ‚Üê –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–∞–ª–æ–≥—É
          </Link>
        </div>

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="bg-white rounded-2xl shadow-lg p-8 mb-6">
          <div className="flex flex-wrap items-center gap-4 mb-4">
            <span className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">
              {getCategoryName(activity.category)}
            </span>
            {activity.premium && (
              <span className="bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-sm font-medium">
                ‚≠ê Premium
              </span>
            )}
          </div>
          
          <h1 className="text-3xl font-bold text-gray-900 mb-4">
            {activity.title}
          </h1>
          
          <p className="text-lg text-gray-600 mb-6">
            {activity.short_description}
          </p>

          {/* –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ */}
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <div className="text-center p-3 bg-gray-50 rounded-lg">
              <div className="text-2xl mb-1">‚è∞</div>
              <div className="font-medium">{activity.duration_minutes} –º–∏–Ω</div>
              <div className="text-sm text-gray-500">{getDurationText(activity.duration_minutes)}</div>
            </div>
            <div className="text-center p-3 bg-gray-50 rounded-lg">
              <div className="text-2xl mb-1">{getDifficultyEmoji(activity.difficulty)}</div>
              <div className="font-medium capitalize">{activity.difficulty}</div>
              <div className="text-sm text-gray-500">–°–ª–æ–∂–Ω–æ—Å—Ç—å</div>
            </div>
            <div className="text-center p-3 bg-gray-50 rounded-lg">
              <div className="text-2xl mb-1">üë∂</div>
              <div className="font-medium">{activity.age_groups.join(', ')}</div>
              <div className="text-sm text-gray-500">–í–æ–∑—Ä–∞—Å—Ç</div>
            </div>
            <div className="text-center p-3 bg-gray-50 rounded-lg">
              <div className="text-2xl mb-1">{activity.location === 'indoor' ? 'üè†' : activity.location === 'outdoor' ? 'üå≥' : 'üåç'}</div>
              <div className="font-medium">{activity.location === 'indoor' ? '–î–æ–º–∞' : activity.location === 'outdoor' ? '–ù–∞ —É–ª–∏—Ü–µ' : '–í–µ–∑–¥–µ'}</div>
              <div className="text-sm text-gray-500">–ú–µ—Å—Ç–æ</div>
            </div>
          </div>
        </div>

        <div className="grid lg:grid-cols-2 gap-6">
          {/* –ú–∞—Ç–µ—Ä–∏–∞–ª—ã */}
          {activity.materials && activity.materials.length > 0 && (
            <div className="bg-white rounded-2xl shadow-lg p-6">
              <h2 className="text-xl font-bold text-gray-900 mb-4 flex items-center gap-2">
                üìã –ß—Ç–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è
              </h2>
              <ul className="space-y-2">
                {activity.materials.map((material, index) => (
                  <li key={index} className="flex items-center gap-3">
                    <span className="w-2 h-2 bg-blue-500 rounded-full flex-shrink-0"></span>
                    <span className="text-gray-700">{material}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}

          {/* –ù–∞–≤—ã–∫–∏ */}
          {activity.skills_developed && activity.skills_developed.length > 0 && (
            <div className="bg-white rounded-2xl shadow-lg p-6">
              <h2 className="text-xl font-bold text-gray-900 mb-4 flex items-center gap-2">
                üí° –ß—Ç–æ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç
              </h2>
              <div className="flex flex-wrap gap-2">
                {activity.skills_developed.map((skill, index) => (
                  <span 
                    key={index}
                    className="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm"
                  >
                    {skill}
                  </span>
                ))}
              </div>
            </div>
          )}
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
        <div className="bg-white rounded-2xl shadow-lg p-6 mt-6">
          <h2 className="text-xl font-bold text-gray-900 mb-6 flex items-center gap-2">
            üìù –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
          </h2>
          <div className="space-y-4">
            {activity.instructions.map((instruction, index) => (
              <div key={index} className="flex gap-4">
                <span className="flex-shrink-0 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center font-bold">
                  {index + 1}
                </span>
                <p className="text-gray-700 pt-1">{instruction}</p>
              </div>
            ))}
          </div>
        </div>

        {/* –¢–µ–≥–∏ */}
        {activity.tags && activity.tags.length > 0 && (
          <div className="bg-white rounded-2xl shadow-lg p-6 mt-6">
            <h2 className="text-xl font-bold text-gray-900 mb-4">üè∑Ô∏è –¢–µ–≥–∏</h2>
            <div className="flex flex-wrap gap-2">
              {activity.tags.map((tag, index) => (
                <span 
                  key={index}
                  className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm"
                >
                  #{tag}
                </span>
              ))}
            </div>
          </div>
        )}

        {/* CTA –¥–ª—è Telegram */}
        <div className="bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl shadow-lg p-8 mt-6 text-white text-center">
          <h2 className="text-2xl font-bold mb-4">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤ Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏!</h2>
          <p className="mb-6 opacity-90">
            –ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å
          </p>
          <a 
            href="https://t.me/your_bot_username" 
            className="inline-block bg-white text-blue-600 px-8 py-3 rounded-full font-bold hover:bg-gray-100 transition-colors"
          >
            üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
          </a>
        </div>
      </div>
    </div>
  )
}